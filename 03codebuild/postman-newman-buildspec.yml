version: 0.2

env:
  variables:
    apitest: "cbap-dev-api-current-account"
  exported-variables:
    - ENVIRONMENT
    - TEST_TYPE
    - REPO_COLECTIONS

phases:
  install:
    runtime-versions:
      nodejs: 16
    commands: #https://learning.getpostman.com/docs/postman/collection-runs/command-line-integration-with-newman/
      - npm install -g newman
      - yum install -y jq
      #- pip3 install awscli --upgrade --user
      - pip install git-remote-codecommit

  pre_build:
    commands:
      - git clone codecommit::us-east-1://${REPO_COLECTIONS}
      - cd ${REPO_COLECTIONS}
      - ls -lrt *
      - cd ..
      - ls -lrt ${REPO_COLECTIONS}/${TEST_TYPE}/${apitest}/${ENVIRONMENT}/
      - python run-newman-test.py ${REPO_COLECTIONS} ${TEST_TYPE} ${apitest} ${ENVIRONMENT}
      - CREDENTIALS_URL="http://169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI"
      - echo $AWS_CONTAINER_CREDENTIALS_RELATIVE_URI
      - AWS_ACCESS_KEY_ID=$(curl -s $CREDENTIALS_URL | jq -r '.AccessKeyId')
      - AWS_SECRET_ACCESS_KEY=$(curl -s $CREDENTIALS_URL | jq -r '.SecretAccessKey')
      - AWS_SESSION_TOKEN=$(curl -s $CREDENTIALS_URL | jq -r '.Token')
      - echo Llave de Acceso $AWS_ACCESS_KEY_ID  Secret $AWS_SECRET_ACCESS_KEY
      - echo prebuild started on `date` from dir `pwd`
      - aws s3 cp "s3://${S3_BUCKET}/postman-env-files/PetStoreAPIEnvironment.postman_environment.json" ./02postman/
      - aws s3 cp "s3://${S3_BUCKET}/postman-env-files/PetStoreAPI.postman_collection.json" ./02postman/
      - cd ./02postman
      - ./update-postman-env-file.sh $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY $AWS_SESSION_TOKEN
      - cd ..
      - aws s3 cp "s3://${S3_BUCKET}/postman-env-files/PetStoreAPIEnvironment.postman_environment.json" ./02_1postman/
      - aws s3 cp "s3://${S3_BUCKET}/postman-env-files/PetStoreAPI.postman_collection.json" ./02_1postman/
      - cp ./02postman/update-postman-env-file.sh ./02_1postman/
      - cd ./02_1postman/
      - ls -lrt
      - ./update-postman-env-file.sh $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY $AWS_SESSION_TOKEN
      


  build:
    commands:
      - echo Build started on `date` from dir `pwd`
      - cd ..
      - pwd
      - mkdir newman
      - mkdir newman/02postman
      - mkdir newman/02_1postman
      - cd ./02postman
      - newman run PetStoreAPI.postman_collection.json --environment PetStoreAPIEnvironment.postman_environment.json -r junit
      - cd ..
      - pwd
      - ls -lrt
      - cd 02_1postman
      - echo Build started on `date` from dir `pwd`
      - newman run PetStoreAPI.postman_collection.json --environment PetStoreAPIEnvironment.postman_environment.json -r junit
      - cd .. 
      - cp ./02postman/create-report-groups.sh .
      - cp ./02postman/reportGroupConf.json .
      - chmod 764 create-report-groups.sh
      - ./create-report-groups.sh

reports:
  JUnitReports: # CodeBuild will create a report group called "SurefireReports".
    files: #Store all of the files
      - '**/*'
    base-directory: 'newman' # Location of the reports
  PostDeploymentReport:
    files: #Store all of the files
      - '**/*'
    base-directory: 'newman/02_1postman' # Location of the reports
